name: VisionExplorer CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend Build and Test
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./visionexplorer-frontend
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: visionexplorer-frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run lint
      run: npm run lint
    
    - name: Build frontend
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist-${{ matrix.node-version }}
        path: visionexplorer-frontend/dist/

  # Backend Build and Test
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./visionexplorer-backend
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: visionexplorer-backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create test directories
      run: |
        mkdir -p tiles
        mkdir -p temp
        mkdir -p source-images
    
    - name: Generate test tiles
      run: npm run generate-tiles-simple -- --test-only --max-zoom=2
    
    - name: Start server (background)
      run: |
        npm start &
        sleep 5
    
    - name: Test server health
      run: |
        curl -f http://localhost:3000 || exit 1
        curl -f http://localhost:3000/tiles/metadata || exit 1

  # Integration Test
  integration:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install root dependencies
      run: npm ci
    
    - name: Install all dependencies
      run: npm run install:all
    
    - name: Create test environment files
      run: |
        cp visionexplorer-backend/.env.example visionexplorer-backend/.env
        cp visionexplorer-frontend/.env.example visionexplorer-frontend/.env
    
    - name: Setup test data
      run: |
        cd visionexplorer-backend
        mkdir -p tiles temp source-images
        npm run generate-tiles-simple -- --test-only --max-zoom=2
    
    - name: Start backend
      run: |
        cd visionexplorer-backend
        npm start &
        sleep 5
    
    - name: Build frontend
      run: |
        cd visionexplorer-frontend
        npm run build
    
    - name: Test integration
      run: |
        # Test backend endpoints
        curl -f http://localhost:3000
        curl -f http://localhost:3000/tiles/metadata
        
        # Test that frontend build includes API calls
        grep -r "localhost:3000" visionexplorer-frontend/dist/ || echo "API URL found in build"

  # Security scan
  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run npm audit (backend)
      run: |
        cd visionexplorer-backend
        npm audit --audit-level=high
    
    - name: Run npm audit (frontend)
      run: |
        cd visionexplorer-frontend
        npm audit --audit-level=high